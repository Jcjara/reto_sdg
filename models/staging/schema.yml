version: 2

sources:
  - name: tpch
    description: "Snowflake sample TPC-H SF1 dataset"
    database: SNOWFLAKE_SAMPLE_DATA
    schema: TPCH_SF1
    tables:
      - name: customer
      - name: orders
      - name: lineitem
      - name: part
      - name: partsupp
      - name: supplier
      - name: nation
      - name: region

models:
  - name: stg_tpch__customer
    description: "Staged customer data from TPCH_SF1"
    columns:
      - name: customer_id
        tests: [unique, not_null]
      - name: account_balance
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: -1000000
                strictly: false
                row_condition: "account_balance is not null"
      - name: nation_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__nation')
                field: nation_id

  - name: stg_tpch__orders
    description: "Staged orders data"
    columns:
      - name: order_id
        tests: [unique, not_null]
      - name: customer_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__customer')
                field: customer_id
      - name: total_price
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "total_price is not null"

  - name: stg_tpch__lineitem
    description: "Staged lineitem data"
    columns:
      - name: order_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__orders')
                field: order_id
      - name: part_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__part')
                field: part_id
      - name: supplier_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__supplier')
                field: supplier_id
      - name: quantity
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "quantity is not null"
      - name: extended_price
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "extended_price is not null"
      - name: discount
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 1
                strictly: false
                row_condition: "discount is not null"
      - name: tax
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                max_value: 1
                strictly: false
                row_condition: "tax is not null"
      - name: ship_date
        tests: [not_null]
      - name: receipt_date
        tests:
          - receipt_on_or_after_ship:
              arguments:
                receipt_col: receipt_date
                ship_col: ship_date

  - name: stg_tpch__part
    description: "Staged part data"
    columns:
      - name: part_id
        tests: [unique, not_null]
      - name: size
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "size is not null"
      - name: retail_price
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "retail_price is not null"

  - name: stg_tpch__partsupp
    description: "Staged partsupp data"
    columns:
      - name: part_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__part')
                field: part_id
      - name: supplier_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__supplier')
                field: supplier_id
      - name: avail_qty
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "avail_qty is not null"
      - name: supply_cost
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
                strictly: false
                row_condition: "supply_cost is not null"

  - name: stg_tpch__supplier
    description: "Staged supplier data"
    columns:
      - name: supplier_id
        tests: [unique, not_null]
      - name: nation_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__nation')
                field: nation_id

  - name: stg_tpch__nation
    description: "Staged nation data"
    columns:
      - name: nation_id
        tests: [unique, not_null]
      - name: region_id
        tests:
          - relationships:
              arguments:
                to: ref('stg_tpch__region')
                field: region_id

  - name: stg_tpch__region
    description: "Staged region data"
    columns:
      - name: region_id
        tests: [unique, not_null]
